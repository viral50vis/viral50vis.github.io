/*! viral-50 v0.0.1 | (c) 2020 Erik BÃ¥venstrand | MIT License | https://github.com/ErikBavenstrand/DH2321-Spotify-Project */
var tooltipZoom,tooltipCC,world=d3.select("#world").append("svg"),g=world.append("g"),worldWidth=parseInt(d3.select(".Root__main-view").style("width")),worldHeight=parseInt(d3.select(".Root__main-view").style("height")),countryTooltip=d3.select("#world").append("div").attr("class","country-tooltip"),tooltipRecent=!1,worldProjection=d3.geoMercator().rotate([-12,0,0]).center([0,0]).scale(worldHeight/1.17/Math.PI).translate([worldWidth/2,worldHeight/1.7]),worldGraticule=d3.geoGraticule(),worldPath=d3.geoPath().projection(worldProjection),zoom=d3.zoom().scaleExtent([1,7]).on("zoom",(function(){var t=d3.event.transform;updateTooltipScale(t.k),tooltipRecent&&showCountryTooltip(tooltipCC);var o=worldWidth*(1-t.k),e=worldHeight*(1-t.k);t.x=Math.min(0,Math.max(o,t.x)),t.y=Math.min(0,Math.max(e,t.y)),g.selectAll("path").attr("transform",t)}));function generateWorldMap(t){g.selectAll("path").data(t.features,(function(t){return t})).enter().append("path").attr("d",worldPath).classed("defaultCountry",!0).each((function(t,o){d3.select(this).classed(t.id,!0)})).on("mouseover",(function(t,o){d3.select(this).classed("countryIsInCurrentData")?(highlightCountryInList(t.id,!0),highlightCountryOnMap(t.id,!0),setTimeout((function(){hideCountryTooltip()}),500),tooltipRecent=!0,showCountryTooltip(t.id)):hideCountryTooltip()})).on("click",(function(t,o){d3.select(this).classed("countryIsInCurrentData")&&(countryClickSelection(t.id),handleCountryClickShowDetail(t.id))})).on("mouseout",(function(t,o){d3.select(this).classed("countryIsInCurrentData")&&(highlightCountryInList(t.id,!1),highlightCountryOnMap(t.id,!1))}))}function existsOnMap(t){return null!==d3.select("."+t)._groups[0][0]}function updateWorldMap(t,o,e){var r=Object.keys(t);d3.selectAll(".defaultCountry").classed("countryIsInCurrentData",!1).style("fill",null).filter((function(t){return r.indexOf(t.id)>-1})).classed("countryIsInCurrentData",!0).each((function(r){d3.select(this).style("fill",calculateColorFromValue(t[r.id][currentAttribute],o[currentAttribute],e[currentAttribute],minColor,maxColor))})),updateLegend(t,o,e)}function handleCountryClickShowDetail(t){zoomInCountry(t),isInDetailView=!0}function highlightCountryOnMap(t,o){existsOnMap(t)&&(o?g.append("path").attr("d",d3.select("."+t).attr("d")).classed("countryHighlight",!0).attr("id",t+"-highlit").attr("transform",d3.select("."+t).attr("transform")):(d3.select("#"+t+"-highlit").remove(),tooltipRecent=!1,hideCountryTooltip()))}function zoomInCountry(t){toggleDetailViewVisibility();var o=worldProjection(worldCountryZoomJSON[t]),e=o[0],r=o[1];d3.event.stopPropagation(),world.transition().duration(1500).call(zoom.transform,d3.zoomIdentity.translate(worldWidth/2,worldHeight/2).scale(1e3).translate(-e,-r))}function zoomOutCountryHideDetail(t){isInDetailView=!1,clearSelectedSongs(),toggleDetailViewVisibility(),d3.event.stopPropagation();var o=worldProjection(worldCountryZoomJSON[t]),e=o[0],r=o[1];world.transition().duration(1).call(zoom.transform,d3.zoomIdentity.translate(worldWidth/2,worldHeight/2).scale(8).translate(-e,-r)).transition().duration(1500).call(zoom.transform,d3.zoomIdentity.scale(1))}function showCountryTooltip(t){tooltipCC=t,ttData=data_attrs[dataWeek][t][currentAttribute].toFixed(3),ttAttrName=currentAttribute.charAt(0).toUpperCase()+currentAttribute.substring(1),ttAttrHtml=ttAttrName+": "+ttData,countryTooltip.html("<strong>"+countryCCJSON[t]+"</strong><br>"+ttAttrHtml),countryTooltip.transition().delay(200).duration(200).style("opacity","0.8"),countryTooltip.style("transform","scale("+tooltipZoom+","+tooltipZoom+")"),h=countryTooltip.style("height").slice(0,-2),w=countryTooltip.style("width").slice(0,-2),x=d3.event.layerX-w/2,y=d3.event.layerY-h,countryTooltip.style("left",x+"px").style("top",y+"px")}function hideCountryTooltip(){tooltipRecent||countryTooltip.style("opacity","0")}function updateTooltipScale(t){screenBaseScale=Math.abs((worldHeight-780)/195),(tooltipZoom=Math.log(3*t)/(6.075*Math.abs((800-worldHeight)/1080))*screenBaseScale)<1&&(tooltipZoom=1)}world.call(zoom),updateTooltipScale(1);